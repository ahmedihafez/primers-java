/*
  This file is part of Java porting of Primer Pooler (https://github.com/ssb22/PrimerPooler)
  Primer Pooler (c) Silas S. Brown.  For Wen.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
package org.ucam.ssb22.pooler;

public class Temprature {

	static final dHS[] dHStable={
			  /* CC/CC */ new dHS(0,0),
			  /* CC/CG */ new dHS(3.6f,8.9f),
			  /* CC/GC */ new dHS(-1.5f,-7.2f),
			  /* CC/GG */ new dHS(-8.0f,-19.9f),
			  /* CC/CA */ new dHS(0f,0f),
			  /* CC/CT */ new dHS(0f,0f),
			  /* CC/GA */ new dHS(0.6f,-0.6f),
			  /* CC/GT */ new dHS(-0.8f,-4.5f),
			  /* CC/AC */ new dHS(0,0),
			  /* CC/AG */ new dHS(5.2f,14.2f),
			  /* CC/TC */ new dHS(0,0),
			  /* CC/TG */ new dHS(5.2f,13.5f),
			  /* CC/AA */ new dHS(0,0),
			  /* CC/AT */ new dHS(0,0),
			  /* CC/TA */ new dHS(0,0),
			  /* CC/TT */ new dHS(0,0),
			  /* CG/CC */ new dHS(-1.5f,-7.2f),
			  /* CG/CG */ new dHS(0,0),
			  /* CG/GC */ new dHS(-10.6f,-27.2f),
			  /* CG/GG */ new dHS(-4.9f,-15.3f),
			  /* CG/CA */ new dHS(0,0),
			  /* CG/CT */ new dHS(0,0),
			  /* CG/GA */ new dHS(-4.0f,-13.2f),
			  /* CG/GT */ new dHS(-4.1f,-11.7f),
			  /* CG/AC */ new dHS(1.9f,3.7f),
			  /* CG/AG */ new dHS(0,0),
			  /* CG/TC */ new dHS(-1.5f,-6.1f),
			  /* CG/TG */ new dHS(0,0),
			  /* CG/AA */ new dHS(0,0),
			  /* CG/AT */ new dHS(0,0),
			  /* CG/TA */ new dHS(0,0),
			  /* CG/TT */ new dHS(0,0),
			  /* GC/CC */ new dHS(3.6f,8.9f),
			  /* GC/CG */ new dHS(-9.8f,-24.4f),
			  /* GC/GC */ new dHS(0,0),
			  /* GC/GG */ new dHS(-6.0f,-15.8f),
			  /* GC/CA */ new dHS(-0.7f,-3.8f),
			  /* GC/CT */ new dHS(2.3f,5.4f),
			  /* GC/GA */ new dHS(0,0),
			  /* GC/GT */ new dHS(0,0),
			  /* GC/AC */ new dHS(0,0),
			  /* GC/AG */ new dHS(-0.6f,-1.0f),
			  /* GC/TC */ new dHS(0,0),
			  /* GC/TG */ new dHS(-4.4f,-12.3f),
			  /* GC/AA */ new dHS(0,0),
			  /* GC/AT */ new dHS(0,0),
			  /* GC/TA */ new dHS(0,0),
			  /* GC/TT */ new dHS(0,0),
			  /* GG/CC */ new dHS(-8.0f,-19.9f),
			  /* GG/CG */ new dHS(-6.0f,-15.8f),
			  /* GG/GC */ new dHS(-4.9f,-15.3f),
			  /* GG/GG */ new dHS(0,0),
			  /* GG/CA */ new dHS(0.5f,3.2f),
			  /* GG/CT */ new dHS(3.3f,10.4f),
			  /* GG/GA */ new dHS(0,0),
			  /* GG/GT */ new dHS(0,0),
			  /* GG/AC */ new dHS(-0.7f,-2.3f),
			  /* GG/AG */ new dHS(0,0),
			  /* GG/TC */ new dHS(-2.8f,-8.0f),
			  /* GG/TG */ new dHS(0,0),
			  /* GG/AA */ new dHS(0,0),
			  /* GG/AT */ new dHS(0,0),
			  /* GG/TA */ new dHS(0,0),
			  /* GG/TT */ new dHS(5.8f,16.3f),
			  /* CA/CC */ new dHS(0,0),
			  /* CA/CG */ new dHS(0,0),
			  /* CA/GC */ new dHS(1.9f,3.7f),
			  /* CA/GG */ new dHS(-0.7f,-2.3f),
			  /* CA/CA */ new dHS(0,0),
			  /* CA/CT */ new dHS(6.1f,16.4f),
			  /* CA/GA */ new dHS(-0.9f,-4.2f),
			  /* CA/GT */ new dHS(-8.5f,-22.7f),
			  /* CA/AC */ new dHS(0,0),
			  /* CA/AG */ new dHS(0,0),
			  /* CA/TC */ new dHS(0,0),
			  /* CA/TG */ new dHS(0,0),
			  /* CA/AA */ new dHS(0,0),
			  /* CA/AT */ new dHS(3.4f,8.0f),
			  /* CA/TA */ new dHS(0,0),
			  /* CA/TT */ new dHS(1.0f,0.7f),
			  /* CT/CC */ new dHS(0,0),
			  /* CT/CG */ new dHS(0,0),
			  /* CT/GC */ new dHS(-1.5f,-6.1f),
			  /* CT/GG */ new dHS(-2.8f,-8.0f),
			  /* CT/CA */ new dHS(0.0f,-4.4f),
			  /* CT/CT */ new dHS(0,0),
			  /* CT/GA */ new dHS(-7.8f,-21.0f),
			  /* CT/GT */ new dHS(-5.0f,-15.8f),
			  /* CT/AC */ new dHS(0,0),
			  /* CT/AG */ new dHS(0,0),
			  /* CT/TC */ new dHS(0,0),
			  /* CT/TG */ new dHS(0,0),
			  /* CT/AA */ new dHS(2.3f,4.6f),
			  /* CT/AT */ new dHS(0,0),
			  /* CT/TA */ new dHS(-1.2f,-6.2f),
			  /* CT/TT */ new dHS(0,0),
			  /* GA/CC */ new dHS(5.2f,14.2f),
			  /* GA/CG */ new dHS(-0.6f,-1.0f),
			  /* GA/GC */ new dHS(0,0),
			  /* GA/GG */ new dHS(0,0),
			  /* GA/CA */ new dHS(-2.9f,-9.8f),
			  /* GA/CT */ new dHS(-8.2f,-22.2f),
			  /* GA/GA */ new dHS(0,0),
			  /* GA/GT */ new dHS(1.6f,3.6f),
			  /* GA/AC */ new dHS(0,0),
			  /* GA/AG */ new dHS(0,0),
			  /* GA/TC */ new dHS(0,0),
			  /* GA/TG */ new dHS(0,0),
			  /* GA/AA */ new dHS(0,0),
			  /* GA/AT */ new dHS(0.7f,0.7f),
			  /* GA/TA */ new dHS(0,0),
			  /* GA/TT */ new dHS(-1.3f,-5.3f),
			  /* GT/CC */ new dHS(5.2f,13.5f),
			  /* GT/CG */ new dHS(-4.4f,-12.3f),
			  /* GT/GC */ new dHS(0,0),
			  /* GT/GG */ new dHS(0,0),
			  /* GT/CA */ new dHS(-8.4f,-22.4f),
			  /* GT/CT */ new dHS(-2.2f,-8.4f),
			  /* GT/GA */ new dHS(-3.1f,-9.5f),
			  /* GT/GT */ new dHS(0,0),
			  /* GT/AC */ new dHS(0,0),
			  /* GT/AG */ new dHS(0,0),
			  /* GT/TC */ new dHS(0,0),
			  /* GT/TG */ new dHS(4.1f,9.5f),
			  /* GT/AA */ new dHS(-0.6f,-2.3f),
			  /* GT/AT */ new dHS(0,0),
			  /* GT/TA */ new dHS(-2.5f,-8.3f),
			  /* GT/TT */ new dHS(0,0),
			  /* AC/CC */ new dHS(0,0),
			  /* AC/CG */ new dHS(-0.7f,-3.8f),
			  /* AC/GC */ new dHS(0,0),
			  /* AC/GG */ new dHS(0.5f,3.2f),
			  /* AC/CA */ new dHS(0,0),
			  /* AC/CT */ new dHS(0,0),
			  /* AC/GA */ new dHS(0,0),
			  /* AC/GT */ new dHS(0,0),
			  /* AC/AC */ new dHS(0,0),
			  /* AC/AG */ new dHS(-2.9f,-9.8f),
			  /* AC/TC */ new dHS(0.0f,-4.4f),
			  /* AC/TG */ new dHS(-8.4f,-22.4f),
			  /* AC/AA */ new dHS(0,0),
			  /* AC/AT */ new dHS(0,0),
			  /* AC/TA */ new dHS(5.3f,14.6f),
			  /* AC/TT */ new dHS(0.7f,0.2f),
			  /* AG/CC */ new dHS(0.6f,-0.6f),
			  /* AG/CG */ new dHS(0,0),
			  /* AG/GC */ new dHS(-4.0f,-13.2f),
			  /* AG/GG */ new dHS(0,0),
			  /* AG/CA */ new dHS(0,0),
			  /* AG/CT */ new dHS(0,0),
			  /* AG/GA */ new dHS(0,0),
			  /* AG/GT */ new dHS(0,0),
			  /* AG/AC */ new dHS(-0.9f,-4.2f),
			  /* AG/AG */ new dHS(0,0),
			  /* AG/TC */ new dHS(-7.8f,-21.0f),
			  /* AG/TG */ new dHS(-3.1f,-9.5f),
			  /* AG/AA */ new dHS(0,0),
			  /* AG/AT */ new dHS(0,0),
			  /* AG/TA */ new dHS(-0.7f,-2.3f),
			  /* AG/TT */ new dHS(1.0f,0.9f),
			  /* TC/CC */ new dHS(0,0),
			  /* TC/CG */ new dHS(2.3f,5.4f),
			  /* TC/GC */ new dHS(0,0),
			  /* TC/GG */ new dHS(3.3f,10.4f),
			  /* TC/CA */ new dHS(0,0),
			  /* TC/CT */ new dHS(0,0),
			  /* TC/GA */ new dHS(0,0),
			  /* TC/GT */ new dHS(0,0),
			  /* TC/AC */ new dHS(6.1f,16.4f),
			  /* TC/AG */ new dHS(-8.2f,-22.2f),
			  /* TC/TC */ new dHS(0,0),
			  /* TC/TG */ new dHS(-2.2f,-8.4f),
			  /* TC/AA */ new dHS(7.6f,20.2f),
			  /* TC/AT */ new dHS(1.2f,0.7f),
			  /* TC/TA */ new dHS(0,0),
			  /* TC/TT */ new dHS(0,0),
			  /* TG/CC */ new dHS(-0.8f,-4.5f),
			  /* TG/CG */ new dHS(0,0),
			  /* TG/GC */ new dHS(-4.1f,-11.7f),
			  /* TG/GG */ new dHS(0,0),
			  /* TG/CA */ new dHS(0,0),
			  /* TG/CT */ new dHS(0,0),
			  /* TG/GA */ new dHS(0,0),
			  /* TG/GT */ new dHS(-1.4f,-6.2f),
			  /* TG/AC */ new dHS(-8.5f,-22.7f),
			  /* TG/AG */ new dHS(1.6f,3.6f),
			  /* TG/TC */ new dHS(-5.0f,-15.8f),
			  /* TG/TG */ new dHS(0,0),
			  /* TG/AA */ new dHS(3.0f,7.4f),
			  /* TG/AT */ new dHS(-0.1f,-1.7f),
			  /* TG/TA */ new dHS(0,0),
			  /* TG/TT */ new dHS(0,0),
			  /* AA/CC */ new dHS(0,0),
			  /* AA/CG */ new dHS(0,0),
			  /* AA/GC */ new dHS(0,0),
			  /* AA/GG */ new dHS(0,0),
			  /* AA/CA */ new dHS(0,0),
			  /* AA/CT */ new dHS(7.6f,20.2f),
			  /* AA/GA */ new dHS(0,0),
			  /* AA/GT */ new dHS(3.0f,7.4f),
			  /* AA/AC */ new dHS(0,0),
			  /* AA/AG */ new dHS(0,0),
			  /* AA/TC */ new dHS(2.3f,4.6f),
			  /* AA/TG */ new dHS(-0.6f,-2.3f),
			  /* AA/AA */ new dHS(0,0),
			  /* AA/AT */ new dHS(4.7f,12.9f),
			  /* AA/TA */ new dHS(1.2f,1.7f),
			  /* AA/TT */ new dHS(-7.9f,-22.2f),
			  /* AT/CC */ new dHS(0,0),
			  /* AT/CG */ new dHS(0,0),
			  /* AT/GC */ new dHS(0,0),
			  /* AT/GG */ new dHS(0,0),
			  /* AT/CA */ new dHS(5.3f,14.6f),
			  /* AT/CT */ new dHS(0,0),
			  /* AT/GA */ new dHS(-0.7f,-2.3f),
			  /* AT/GT */ new dHS(0,0),
			  /* AT/AC */ new dHS(0,0),
			  /* AT/AG */ new dHS(0,0),
			  /* AT/TC */ new dHS(-1.2f,-6.2f),
			  /* AT/TG */ new dHS(-2.5f,-8.3f),
			  /* AT/AA */ new dHS(1.2f,1.7f),
			  /* AT/AT */ new dHS(0,0),
			  /* AT/TA */ new dHS(-7.2f,-20.4f),
			  /* AT/TT */ new dHS(-2.7f,-10.8f),
			  /* TA/CC */ new dHS(0,0),
			  /* TA/CG */ new dHS(0,0),
			  /* TA/GC */ new dHS(0,0),
			  /* TA/GG */ new dHS(0,0),
			  /* TA/CA */ new dHS(0,0),
			  /* TA/CT */ new dHS(1.2f,0.7f),
			  /* TA/GA */ new dHS(0,0),
			  /* TA/GT */ new dHS(-0.1f,-1.7f),
			  /* TA/AC */ new dHS(3.4f,8.0f),
			  /* TA/AG */ new dHS(0.7f,0.7f),
			  /* TA/TC */ new dHS(0,0),
			  /* TA/TG */ new dHS(0,0),
			  /* TA/AA */ new dHS(4.7f,12.9f),
			  /* TA/AT */ new dHS(-7.2f,-21.3f),
			  /* TA/TA */ new dHS(0,0),
			  /* TA/TT */ new dHS(0.2f,-1.5f),
			  /* TT/CC */ new dHS(0,0),
			  /* TT/CG */ new dHS(0,0),
			  /* TT/GC */ new dHS(0,0),
			  /* TT/GG */ new dHS(5.8f,16.3f),
			  /* TT/CA */ new dHS(0.7f,0.2f),
			  /* TT/CT */ new dHS(0,0),
			  /* TT/GA */ new dHS(1.0f,0.9f),
			  /* TT/GT */ new dHS(0,0),
			  /* TT/AC */ new dHS(1.0f,0.7f),
			  /* TT/AG */ new dHS(-1.3f,-5.3f),
			  /* TT/TC */ new dHS(0,0),
			  /* TT/TG */ new dHS(0,0),
			  /* TT/AA */ new dHS(-7.9f,-22.2f),
			  /* TT/AT */ new dHS(0.2f,-1.5f),
			  /* TT/TA */ new dHS(-2.7f,-10.8f),
			  /* TT/TT */ new dHS(0,0),
			  /* [256] = init C or G */ new dHS( 0.1f,-2.8f),
			  /* [257] = init A or T */ new dHS( 2.3f,4.1f),
			  /* [258] = symmetry correction TODO: how to use this? (MPprimer doesn't) */ new dHS( 0,-1.4f),
			};
	
	
	
	static final public float C_to_kelvin(float C) { 
		return C+273.15f; 
		}
	static final public float F_to_kelvin(float F) { 
		return (float) ((F+459.67)*5.0/9.0); 
		}
	static final public float R_to_kelvin(double R) { 
		return (float) (R*5.0/9.0); 
		}
	static final public float E_to_kelvin(double E) {
		return (float) (((E-16.0)*5.0/7.0)+273.15); 
		}
	
	
	// MPprimer has monovalent_cation_conc_mM default 50, others 0
	// Versions prior to 1.17 incorrectly called these _nM instead of _mM (unit, you nit :-) )
	public static float[] deltaG_table(float K,float mg_conc_mM,float monovalent_cation_conc_mM,float dNTP_conc_mM) {
		  // MPprimer has monovalent_cation_conc_mM default 50, others 0
		  // Versions prior to 1.17 incorrectly called these _nM instead of _mM (unit, you nit :-) )
		 float[] r = new float[259];
		  int i;
		  float entropy_adjust = 
				  (float) (0.368 * Math.log((monovalent_cation_conc_mM + 120 * ((mg_conc_mM>dNTP_conc_mM) ? Math.sqrt(mg_conc_mM-dNTP_conc_mM) : 0))/1000));
		  
		  for(i=0; i<259; i++)
		    r[i] = dHStable[i].dH_kcal_per_mol - (dHStable[i].dS_cal_per_molK+entropy_adjust)*K/1000.0f;
		  return r;
		}

}
